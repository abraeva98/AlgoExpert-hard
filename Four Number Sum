// O(N^2) - time, space

function fourNumberSum(array, targetSum) {
  // Write your code here.
	let twoSum = new Map();
	let n = array.length;
	let res = [];
	for(let i = 1; i < n - 1; i ++) {
		for(let j = i + 1; j < n; j ++) {
			let curSum = array[i] + array[j];
			let dif = targetSum - curSum;
			if(twoSum.has(dif)) {
				for(let pair of twoSum.get(dif)) {
					res.push(pair.concat([array[i], array[j]]));
				}
			}
		}
		for(let k = 0; k < i; k ++) {
			let sum = array[i] + array[k];
			if(!twoSum.has(sum)) twoSum.set(sum, []);
			twoSum.get(sum).push([array[i], array[k]]);
		}
	}
	return res;
}


function fourNumberSum(array, targetSum) {
  /*
		sort the array, create nested loops,
		compare if the sum is larger of lesser than the target
	*/
	array.sort((a, b) => a - b);
	let quadruplets = [];
	for (let i = 0; i < array.length - 3; i ++) {
		for (let j = i + 1; j < array.length - 2; j ++) {
			let left = j + 1;
			let right = array.length - 1;
			while (left < right) {
			let currentSum = array[i] + array[j] + array[left] + array[right];
			if (currentSum > targetSum) {
				right --;
			} else if (currentSum < targetSum) {
				left ++;
			} else {
				quadruplets.push([array[i], array[j], array[left], array[right]]);
				right --;
				left ++;
			}
			}
		}
	}
	return quadruplets;
}
